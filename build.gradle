

plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}



sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


repositories {
	jcenter()
	maven {
		url = "https://jitpack.io/"
		content {
			includeGroup("com.github.MinnDevelopment")
		}
	}
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include(implementation ('club.minnced:discord-rpc-release:v3.4.0'))
	include(implementation("com.github.MinnDevelopment:java-discord-rpc:v2.0.2"))

}
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}



tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}



jar {
	from "LICENSE"
}




// configure the maven publication
publishing {
	repositories {
		jcenter()
	}
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		jcenter()
	}
}
